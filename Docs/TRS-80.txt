============================================================
                    GENERAL                                 
============================================================


OPTION VERSION "TRS-80"
REM INTERNAL ID: T80
REM DESCRIPTION: TRS-80 Model I/III/4 LBASIC
REM   REFERENCE: LBASIC USER'S GUIDE
REM              by Galactic Software, Ltd.
REM              (c) 1981, Galactic Software, Ltd.
REM              http://www.tim-mann.org/trs80/doc/
REM              lbasic.txt
REM
OPTION STRICT OFF
OPTION ANGLE RADIANS
OPTION BUGS ON
OPTION LABELS OFF
OPTION COMPARE BINARY
OPTION COVERAGE OFF
OPTION TRACE OFF
OPTION ERROR GOTO
OPTION IMPLICIT
OPTION BASE          0
OPTION RECLEN        128
OPTION DATE          ""
OPTION TIME          "%m/%d/%y %H:%M:%S"
OPTION PUNCT STRING        "$"
OPTION PUNCT DOUBLE        "#"
OPTION PUNCT SINGLE        "!"
OPTION PUNCT CURRENCY      " "
OPTION PUNCT LONG          "&"
OPTION PUNCT INTEGER       "%"
OPTION PUNCT BYTE          " "
OPTION PUNCT QUOTE         """
OPTION PUNCT COMMENT       "'"
OPTION PUNCT STATEMENT     ":"
OPTION PUNCT PRINT         "?"
OPTION PUNCT INPUT         " "
OPTION PUNCT IMAGE         " "
OPTION PUNCT LPAREN        "("
OPTION PUNCT RPAREN        ")"
OPTION PUNCT FILENUM       "#"
OPTION PUNCT AT            "@"
OPTION USING DIGIT   "#"
OPTION USING COMMA   ","
OPTION USING PERIOD  "."
OPTION USING PLUS    "+"
OPTION USING MINUS   "-"
OPTION USING EXRAD   "^"
OPTION USING DOLLAR  "$"
OPTION USING FILLER  "*"
OPTION USING LITERAL "_"
OPTION USING FIRST   "!"
OPTION USING ALL     "&"
OPTION USING LENGTH  "%"


============================================================
                    COMMANDS                                
============================================================


------------------------------------------------------------
     SYNTAX: AS
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: AUTO [start [, increment]]
DESCRIPTION: Automatic line numbering for manual program
             entry.  If the line already exists, then an
             asterisk is displayed and pressing ENTER
             leaves the line as-is.  If the line does not
             exist, then an asterisk is not displayed and
             pressing ENTER terminates AUTO mode. 
             Regardless whether the line exists, entering
             the command MAN will terminate AUTO mode. 
             AUTO mode is also terminated by any ERROR or
             by pressing control-C.
------------------------------------------------------------
     SYNTAX: CHAIN filename$ [, linenumber]
DESCRIPTION: Load and execute another BASIC program,
             without clearing common variables.  For
             System/370, the syntax is CHAIN
             filename$,parameter$.
------------------------------------------------------------
     SYNTAX: CLEAR
DESCRIPTION: Sets all numeric variables to 0, and all
             string variables to empty strings.
------------------------------------------------------------
     SYNTAX: CLOAD [filename$]
DESCRIPTION: Loads an ASCII BASIC program into memory.
------------------------------------------------------------
     SYNTAX: CLOAD* arrayname
DESCRIPTION: Loads a numeric array from a file saved using
             CSAVE*.
------------------------------------------------------------
     SYNTAX: COMMON variable [, ...]
DESCRIPTION: Designates variables to be passed to a CHAINed
             program.
------------------------------------------------------------
     SYNTAX: CONT
DESCRIPTION: Continue a BASIC program after a STOP has been
             executed.  Program resumes at the line after
             the STOP.
------------------------------------------------------------
     SYNTAX: CSAVE [filename$]
DESCRIPTION: Saves the current program into the file
             filename$ in ASCII format.
------------------------------------------------------------
     SYNTAX: CSAVE* ArrayName
DESCRIPTION: Saves a numeric array into a file for later
             loading by CLOAD*.
------------------------------------------------------------
     SYNTAX: DATA constant [, ...]
DESCRIPTION: Stores numeric and string constants to be
             accessed by READ.
------------------------------------------------------------
     SYNTAX: DEF FNname[( arg [,...] )] = value
DESCRIPTION: Defines a single-line function.  Single-line
             functions require an equal sign.
------------------------------------------------------------
     SYNTAX: DEF FNname[( arg [,...] )]
DESCRIPTION: Defines a multiline function.  Multi-line DEF
             functions do not have an equal sign and must
             end with FNEND.
------------------------------------------------------------
     SYNTAX: DEFDBL letter[-letter] [, ...]
DESCRIPTION: Declares variables with single-letter names as
             numeric variables.
------------------------------------------------------------
     SYNTAX: DEFINT  letter[-letter] [, ...]
DESCRIPTION: Declares variables with single-letter names as
             numeric variables.
------------------------------------------------------------
     SYNTAX: DEFSNG letter[-letter] [, ...]
DESCRIPTION: Declares variables with single-letter names as
             numeric variables.
------------------------------------------------------------
     SYNTAX: DEFSTR letter[-letter] [, ...]
DESCRIPTION: Declares variables with single-letter names as
             string variables.
------------------------------------------------------------
     SYNTAX: DELETE line [- line]
DESCRIPTION: Deletes program lines indicated by the
             argument(s).  All program lines have a
             number, which is visible with the LIST
             command.  If line numbers are not provided,
             they are assigned beginning with 1.  Deleting
             a non-existing line does not cause an error.
------------------------------------------------------------
     SYNTAX: DIM [# filenum,] variable([ lower TO ] upper)
DESCRIPTION: Declares variables and specifies the
             dimensions of array variables.  For array
             variables, if the lower bound is not
             provided, then the OPTION BASE value is used.
             If filenum is provided, then the variable is
             virtual.
------------------------------------------------------------
     SYNTAX: EDIT
DESCRIPTION: implementation defined.
------------------------------------------------------------
     SYNTAX: ELSE
DESCRIPTION: Introduces a default condition in a multi-line
             IF statement.
------------------------------------------------------------
     SYNTAX: ELSEIF
DESCRIPTION: Introduces a secondary condition in a
             multi-line IF statement.
------------------------------------------------------------
     SYNTAX: END
DESCRIPTION: Terminates program execution. If the BASIC
             program was executed from the operating
             system level, then control returns to the
             operating system, oterwise control reuturns
             to the BASIC prompt.
------------------------------------------------------------
     SYNTAX: END IF
DESCRIPTION: Specifies the last line of a multi-line IF
             definition.
------------------------------------------------------------
     SYNTAX: ERASE variable [, ...]
DESCRIPTION: Eliminates arrayed variables from a program.
------------------------------------------------------------
     SYNTAX: FIELD [#] filenum, number AS variable$ [, ...]
DESCRIPTION: Assigns number bytes in the buffer of random
             file filenum to the variable variable$.  GET
             will automatically update the variable, and
             PUT will automatically use the variable.
------------------------------------------------------------
     SYNTAX: FNEND
DESCRIPTION: Specifies the last line of a multi-line DEF
             function.
------------------------------------------------------------
     SYNTAX: FOR variable = start TO finish [STEP
             increment]
DESCRIPTION: Top of a FOR - NEXT structure.  The loop will
             continue a fixed number of times, which is
             determined by the values of start, finish,
             and increment.
------------------------------------------------------------
     SYNTAX: GO
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: GO SUB line
DESCRIPTION: Initiates a subroutine call to the line
             specified.  The subroutine must end with
             RETURN.  The line may be a number or a label.
------------------------------------------------------------
     SYNTAX: GO TO line
DESCRIPTION: Branches program execution to the specified
             line.  The line may be a number or a label.
------------------------------------------------------------
     SYNTAX: GOSUB line
DESCRIPTION: Initiates a subroutine call to the line
             specified.  The subroutine must end with
             RETURN.  The line may be a number or a label.
------------------------------------------------------------
     SYNTAX: GOTO line
DESCRIPTION: Branches program execution to the specified
             line.  The line may be a number or a label.
------------------------------------------------------------
     SYNTAX: IF value THEN line1 [ELSE line2]
DESCRIPTION: Single line standard IF command.  If the value
             is non-zero, then branh to line1.  If the
             value is zero and ELSE is provided, then
             branch to line2.  Otherwise continue to the
             next line.  LABELS are not allowed.
------------------------------------------------------------
     SYNTAX: IF value THEN
DESCRIPTION: Top of a multi-line IF - END IF structure.  If
             the value is non-zero, then the program lines
             upto the next ELSE or ELSE IF command are
             executed, otherwise the program branches to
             the next ELSE or ELSE IF command.
------------------------------------------------------------
     SYNTAX: INPUT "prompt string" , variable [, ...]
DESCRIPTION: Reads input from the terminal after displaying
             a prompt.
------------------------------------------------------------
     SYNTAX: INPUT # filenum , variable [, ...]s
DESCRIPTION: Reads input from the file specified by
             filenum.
------------------------------------------------------------
     SYNTAX: INPUT variable [, ...]
DESCRIPTION: Reads input from the terminal.
------------------------------------------------------------
     SYNTAX: INPUT LINE variable$
DESCRIPTION: Reads entire line from the terminal into
             variable$.
------------------------------------------------------------
     SYNTAX: INPUT LINE # filenum , variable$
DESCRIPTION: Reads entire line from a file into variable$.
------------------------------------------------------------
     SYNTAX: INPUT LINE "prompt string" , variable$
DESCRIPTION: Reads entire line from the terminal into
             variable$ after displaying a prompt
------------------------------------------------------------
     SYNTAX: [LET] variable [, ...] = value
DESCRIPTION: Assigns the value to the variable.  The LET
             keyword is optional.
------------------------------------------------------------
     SYNTAX: LINE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: LINE INPUT [[#] filenum,]["prompt string";]
             variable$
DESCRIPTION: Reads entire line from the keyboard or a file
             into variable$.
------------------------------------------------------------
     SYNTAX: LIST line1 [- line2]
DESCRIPTION: Lists BASIC program lines from line1 to line2
             to the console on stdout.
------------------------------------------------------------
     SYNTAX: LLIST line1 [- line2]
DESCRIPTION: Lists BASIC program lines from line1 to line2
             to the printer on stderr.
------------------------------------------------------------
     SYNTAX: LOAD [filename$]
DESCRIPTION: Loads an ASCII BASIC program into memory.
------------------------------------------------------------
     SYNTAX: LPRINT [USING format-string$;] value ...
DESCRIPTION: Send output to the printer (stderr).
------------------------------------------------------------
     SYNTAX: LSET variable$ = value
DESCRIPTION: Left-aligns the value into variable$.  If the
             length of the value is too short, then it is
             padded on the right with spaces.  If the
             length of the value is too long, then it is
             truncated on the right.  This is only for use
             with variables assigned to a random access
             buffer with FIELD command.
------------------------------------------------------------
     SYNTAX: MAINTAINER
DESCRIPTION: This command is reserved for use by the
             Bywater BASIC maintainer.  It is not for the
             BASIC programmer.
------------------------------------------------------------
     SYNTAX: MAINTAINER CMDS
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: MAINTAINER CMDS HTML
DESCRIPTION: Dump COMMAND vs VERSION as HTML table
------------------------------------------------------------
     SYNTAX: MAINTAINER CMDS ID
DESCRIPTION: Dump COMMAND #define.
------------------------------------------------------------
     SYNTAX: MAINTAINER CMDS MANUAL
DESCRIPTION: Dump COMMAND manual.
------------------------------------------------------------
     SYNTAX: MAINTAINER CMDS_SWITCH
DESCRIPTION: Dump COMMAND switch.
------------------------------------------------------------
     SYNTAX: MAINTAINER CMDS TABLE
DESCRIPTION: Dump COMMAND table.
------------------------------------------------------------
     SYNTAX: MAINTAINER DEBUG
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: MAINTAINER DEBUG OFF
DESCRIPTION: Disable degug tracing.
------------------------------------------------------------
     SYNTAX: MAINTAINER DEBUG ON
DESCRIPTION: Enable degug tracing.
------------------------------------------------------------
     SYNTAX: MAINTAINER FNCS
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: MAINTAINER FNCS HTML
DESCRIPTION: Dump FUNCTION vs VERSION as HTML table.
------------------------------------------------------------
     SYNTAX: MAINTAINER FNCS ID
DESCRIPTION: Dump FUNCTION #define.
------------------------------------------------------------
     SYNTAX: MAINTAINER FNCS MANUAL
DESCRIPTION: Dump FUNCTION manual.
------------------------------------------------------------
     SYNTAX: MAINTAINER FNCS SWITCH
DESCRIPTION: Dump FUNCTION switch.
------------------------------------------------------------
     SYNTAX: MAINTAINER FNCS TABLE
DESCRIPTION: Dump FUNCTION table.
------------------------------------------------------------
     SYNTAX: MAINTAINER MANUAL
DESCRIPTION: Dump manual for the currently selected OPTION
             VERSION.
------------------------------------------------------------
     SYNTAX: MAINTAINER STACK
DESCRIPTION: Dump the BASIC stack.
------------------------------------------------------------
     SYNTAX: MERGE filename$
DESCRIPTION: Merges the BASIC program in filename$ into the
             current BASIC program.  Lines in filename$
             replace any matching lines in the current
             program.
------------------------------------------------------------
     SYNTAX: MID$( variable$, start [, count ] ) = value
DESCRIPTION: Replaces a subtring of variable$ with value.
------------------------------------------------------------
     SYNTAX: NAME old$ AS new$
DESCRIPTION: Changes the name of an existing file.
------------------------------------------------------------
     SYNTAX: NEW
DESCRIPTION: Deletes the program in memory and clears all
             variables.
------------------------------------------------------------
     SYNTAX: NEXT [variable]
DESCRIPTION: The bottom line of a FOR - NEXT structure.
------------------------------------------------------------
     SYNTAX: OF
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: ON value GOSUB line [, ...]
DESCRIPTION: Calls based on the rounded value.
------------------------------------------------------------
     SYNTAX: ON value GOTO line [, ...]
DESCRIPTION: Branches based on the rounded value.
------------------------------------------------------------
     SYNTAX: ON ERROR
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: ON ERROR GOTO errline
DESCRIPTION: When a trappable error occurs, execute GOTO
             errline.  The error handler must terminate
             with a RESUME command.  If the line number is
             0 (zerp), then use the default error handler.
             Valid when OPTION ERROR GOTO.
------------------------------------------------------------
     SYNTAX: ON ERROR RESUME
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: ON ERROR RESUME NEXT
DESCRIPTION: When a trappable error occurs, execution
             continues with the next line.  Valid when
             OPTION ERROR GOTO.
------------------------------------------------------------
     SYNTAX: OPEN filename$
             FOR INPUT|OUTPUT|APPEND|BINARY|RANDOM|VIRTUAL
             AS [#] fileenumber
             [LEN [=] record-length]
DESCRIPTION: Opens a file for use.
             RANDOM requires LEN.
------------------------------------------------------------
     SYNTAX: OPTION
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION ANGLE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION ANGLE DEGREES
DESCRIPTION: Configures these math functions to accept and
             return angles in degrees:  ACOS, ACS, ANGLE,
             ARCSIN, ASIN, ASN, ARCTAN, ATN, ATAN, COS,
             COT, CSC, SEC, SIN and TAN.
------------------------------------------------------------
     SYNTAX: OPTION ANGLE GRADIANS
DESCRIPTION: Configures these math functions to accept and
             return angles in gradians:  ACOS, ANGLE,
             ASIN, ASN, ATN, ATAN, COS, COT, CSC, SEC, SIN
             and TAN.
------------------------------------------------------------
     SYNTAX: OPTION ANGLE RADIANS
DESCRIPTION: Configures these math functions to accept and
             return angles in radians:  ACOS, ANGLE, ASIN,
             ASN, ATN, ATAN, COS, COT, CSC, SEC, SIN and
             TAN.
------------------------------------------------------------
     SYNTAX: OPTION ARITHMETIC
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION ARITHMETIC DECIMAL
DESCRIPTION: Currently has no effect.
------------------------------------------------------------
     SYNTAX: OPTION ARITHMETIC FIXED
DESCRIPTION: Currently has no effect.
------------------------------------------------------------
     SYNTAX: OPTION ARITHMETIC NATIVE
DESCRIPTION: Currently has no effect.
------------------------------------------------------------
     SYNTAX: OPTION BASE integer
DESCRIPTION: Sets the default lowest array subscript.
------------------------------------------------------------
     SYNTAX: OPTION BUGS
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION BUGS BOOLEAN
DESCRIPTION: Boolean results are 1 or 0 instead of bitwise.
------------------------------------------------------------
     SYNTAX: OPTION BUGS OFF
DESCRIPTION: Disables bugs commonly found in many BASIC
             dialects.
------------------------------------------------------------
     SYNTAX: OPTION BUGS ON
DESCRIPTION: Enables bugs commonly found in many BASIC
             dialects.
------------------------------------------------------------
     SYNTAX: OPTION COMPARE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION COMPARE BINARY
DESCRIPTION: Causes string comparisons to be
             case-sensitive.
------------------------------------------------------------
     SYNTAX: OPTION COMPARE DATABASE
DESCRIPTION: Causes string comparisons to be
             case-insensitive.
------------------------------------------------------------
     SYNTAX: OPTION COMPARE TEXT
DESCRIPTION: Causes string comparisons to be
             case-insensitive.
------------------------------------------------------------
     SYNTAX: OPTION COVERAGE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION COVERAGE OFF
DESCRIPTION: Disables BASIC code coverage recording,
             displayed using the LIST command.
------------------------------------------------------------
     SYNTAX: OPTION COVERAGE ON
DESCRIPTION: Enables BASIC code coverage recording,
             displayed using the LIST command.
------------------------------------------------------------
     SYNTAX: OPTION DATE format$
DESCRIPTION: Sets the date format string used by C
             strftime() for DATE$.
------------------------------------------------------------
     SYNTAX: OPTION DIGITS integer
DESCRIPTION: Sets the number of significant digits for
             PRINT.  Setting the value to zero restores
             the default.
------------------------------------------------------------
     SYNTAX: OPTION DISABLE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION DISABLE COMMAND name$
DESCRIPTION: Disables the specified BASIC command.
------------------------------------------------------------
     SYNTAX: OPTION DISABLE FUNCTION name$
DESCRIPTION: Disables the specified BASIC function.
------------------------------------------------------------
     SYNTAX: OPTION DISABLE OPERATOR name$
DESCRIPTION: Disables the specified BASIC operator.
------------------------------------------------------------
     SYNTAX: OPTION EDIT string$
DESCRIPTION: Sets the program name used by the EDIT
             command.
------------------------------------------------------------
     SYNTAX: OPTION ENABLE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION ENABLE COMMAND name$
DESCRIPTION: Enables the specified BASIC command.
------------------------------------------------------------
     SYNTAX: OPTION ENABLE FUNCTION name$
DESCRIPTION: Enables the specified BASIC function.
------------------------------------------------------------
     SYNTAX: OPTION ENABLE OPERATOR name$
DESCRIPTION: Enables the specified BASIC operator.
------------------------------------------------------------
     SYNTAX: OPTION ERROR
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION ERROR GOSUB
DESCRIPTION: When an error occurs, GOSUB to the error
             handler.  The error handler exits with
             RETURN.
------------------------------------------------------------
     SYNTAX: OPTION ERROR GOTO
DESCRIPTION: When an error occurs, GOTO to the error
             handler.  The error handler exits with
             RESUME.
------------------------------------------------------------
     SYNTAX: OPTION EXPLICIT
DESCRIPTION: All variables must be declared using DIM.
------------------------------------------------------------
     SYNTAX: OPTION EXTENSION string$
DESCRIPTION: Sets the BASIC filename extension, commonly
             ".bas".
------------------------------------------------------------
     SYNTAX: OPTION FILES string$
DESCRIPTION: Sets the program name used by the FILES
             command.
------------------------------------------------------------
     SYNTAX: OPTION IMPLICIT
DESCRIPTION: Variables need not be declared using DIM,
             provided arrays have no more that 10
             elements.  This is the opposite of OPTION
             EXPLICIT, and is the default for all versions
             of BASIC.
------------------------------------------------------------
     SYNTAX: OPTION INDENT integer
DESCRIPTION: Sets indention level for LIST.  Zero means no
             indention.  Default is 2.
------------------------------------------------------------
     SYNTAX: OPTION LABELS
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION LABELS OFF
DESCRIPTION: Disables text labels.
------------------------------------------------------------
     SYNTAX: OPTION LABELS ON
DESCRIPTION: Enables text labels.
------------------------------------------------------------
     SYNTAX: OPTION PROMPT string$
DESCRIPTION: Sets the BASIC prompt.
------------------------------------------------------------
     SYNTAX: OPTION PUNCT
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION PUNCT AT char$
DESCRIPTION: Sets the PRINT AT character, commonly "@".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT BYTE char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type BYTE, commonly "~".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT COMMENT char$
DESCRIPTION: Sets the shortcut COMMENT character.
------------------------------------------------------------
     SYNTAX: OPTION PUNCT CURRENCY char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type CURRENCY, commonly "@".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT DOUBLE char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type DOUBLE, commonly "#".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT FILENUM char$
DESCRIPTION: Sets the FILE NUMBER prefix character,
             commonly "#".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT IMAGE char$
DESCRIPTION: Sets the shortcut IMAGE character, commonly
             ":".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT INPUT char$
DESCRIPTION: Sets the shortcut INPUT character, commonly
             "!".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT INTEGER char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type INTEGER, commonly "%".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT LONG char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type LONG, commonly "&".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT LPAREN char$
DESCRIPTION: Sets the LEFT PARENTHESIS character, commonly
             "(".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT_PRINT char$
DESCRIPTION: Sets the shortcut PRINT character, commonly
             "?".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT QUOTE char$
DESCRIPTION: Sets the QUOTE character, commonly """
------------------------------------------------------------
     SYNTAX: OPTION PUNCT RPAREN char$
DESCRIPTION: Sets the RIGHT PARENTHESIS character, commonly
             ")".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT SINGLE char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type SINGLE, commonly "!".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT STATEMENT char$
DESCRIPTION: Sets the statement seperator character,
             commonly ":".
------------------------------------------------------------
     SYNTAX: OPTION PUNCT STRING char$
DESCRIPTION: Sets the suffix character that indicates a
             variable is of type STRING, commonly "$".
------------------------------------------------------------
     SYNTAX: OPTION RECLEN integer
DESCRIPTION: Sets the default RANDOM record length.
------------------------------------------------------------
     SYNTAX: OPTION RENUM string$
DESCRIPTION: Sets the program name used by the RENUM
             command.
------------------------------------------------------------
     SYNTAX: OPTION ROUND
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION ROUND BANK
DESCRIPTION: Round using the Banker rule.
------------------------------------------------------------
     SYNTAX: OPTION ROUND MATH
DESCRIPTION: Round using mathematical rules.
------------------------------------------------------------
     SYNTAX: OPTION ROUND TRUNCATE
DESCRIPTION: Round using truncation.
------------------------------------------------------------
     SYNTAX: OPTION SCALE integer
DESCRIPTION: Sets the number of digits to round after the
             decimal point for PRINT.  Setting the value
             to zero disables rounding.
------------------------------------------------------------
     SYNTAX: OPTION SLEEP double
DESCRIPTION: Sets multiplier for SLEEP and WAIT.  Zero
             means no waiting.  Default is 1.
------------------------------------------------------------
     SYNTAX: OPTION STDERR filename$
DESCRIPTION: Sets the file used for STDERR, which is used
             by LPRINT commands.
------------------------------------------------------------
     SYNTAX: OPTION STDIN filename$
DESCRIPTION: Sets the file used for STDIN, which is used by
             INPUT commands.
------------------------------------------------------------
     SYNTAX: OPTION STDOUT filename$
DESCRIPTION: Sets the file used for STDOUT, which is used
             by PRINT commands.
------------------------------------------------------------
     SYNTAX: OPTION STRICT
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION STRICT OFF
DESCRIPTION: Disables checking for implicit array creation
             without using the DIM command.
------------------------------------------------------------
     SYNTAX: OPTION STRICT ON
DESCRIPTION: Enables checking for implicit array creation
             without using the DIM command.
------------------------------------------------------------
     SYNTAX: OPTION TERMINAL
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION TERMINAL ADM
DESCRIPTION: Enables ADM-3A terminal control codes for CLS,
             COLOR, and LOCATE.
------------------------------------------------------------
     SYNTAX: OPTION TERMINAL ANSI
DESCRIPTION: Enables ANSI terminal control codes for CLS,
             COLOR, and LOCATE.
------------------------------------------------------------
     SYNTAX: OPTION TERMINAL NONE
DESCRIPTION: Disables terminal control codes for CLS,
             COLOR, and LOCATE.
------------------------------------------------------------
     SYNTAX: OPTION TIME format$
DESCRIPTION: Sets the time format string used by C
             strftime() for TIME$.
------------------------------------------------------------
     SYNTAX: OPTION TRACE
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION TRACE OFF
DESCRIPTION: Disables displaying a stack trace when an
             ERROR occurs.
------------------------------------------------------------
     SYNTAX: OPTION TRACE ON
DESCRIPTION: Enables displaying a stack trace when an ERROR
             occurs.
------------------------------------------------------------
     SYNTAX: OPTION USING
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: OPTION USING ALL char$
DESCRIPTION: Specifies the magic ALL character for the
             PRINT USING command.  A common value is "&".
------------------------------------------------------------
     SYNTAX: OPTION USING COMMA char$
DESCRIPTION: Specifies the magic COMMA character for the
             PRINT USING command.  A common value is ",".
------------------------------------------------------------
     SYNTAX: OPTION USING DIGIT char$
DESCRIPTION: Specifies the magic DIGIT character for the
             PRINT USING command.  A common value is "#".
------------------------------------------------------------
     SYNTAX: OPTION USING DOLLAR char$
DESCRIPTION: Specifies the magic DOLLAR character for the
             PRINT USING command.  A common value is "$".
------------------------------------------------------------
     SYNTAX: OPTION USING EXRAD char$
DESCRIPTION: Specifies the magic EXRAD character for the
             PRINT USING command.  A common value is "^".
------------------------------------------------------------
     SYNTAX: OPTION USING FILLER char$
DESCRIPTION: Specifies the magic FILLER character for the
             PRINT USING command.  A common value is "*".
------------------------------------------------------------
     SYNTAX: OPTION USING FIRST char$
DESCRIPTION: Specifies the magic FIRST character for the
             PRINT USING command.  A common value is "!".
------------------------------------------------------------
     SYNTAX: OPTION USING LENGTH char$
DESCRIPTION: Specifies the magic LENGTH character for the
             PRINT USING command.  A common value is "\".
------------------------------------------------------------
     SYNTAX: OPTION USING LITERAL char$
DESCRIPTION: Specifies the magic LITERAL character for the
             PRINT USING command.  A common value is "_".
------------------------------------------------------------
     SYNTAX: OPTION USING MINUS char$
DESCRIPTION: Specifies the magic MINUS character for the
             PRINT USING command.  A common value is "-".
------------------------------------------------------------
     SYNTAX: OPTION USING PERIOD char$
DESCRIPTION: Specifies the magic PERIOD character for the
             PRINT USING command.  A common value is ".".
------------------------------------------------------------
     SYNTAX: OPTION USING PLUS char$
DESCRIPTION: Specifies the magic PLUS character for the
             PRINT USING command.  A common value is "+".
------------------------------------------------------------
     SYNTAX: OPTION VERSION version$
DESCRIPTION: Selects a specific BASIC version, which is a
             combination of OPTION settings, commands,
             functions and operators.  If no version is
             specified, displays a list of the available
             versions.
------------------------------------------------------------
     SYNTAX: OPTION ZONE integer
DESCRIPTION: Sets the PRINT zone width.  Setting the value
             to zero restores the default.
------------------------------------------------------------
     SYNTAX: PRINT # filenum , [USING format$;] value ...
DESCRIPTION: Sends output to a file.
------------------------------------------------------------
     SYNTAX: PRINT [USING format$;] value ...
DESCRIPTION: Sends output to the screen.
------------------------------------------------------------
     SYNTAX: READ variable [, ...]
DESCRIPTION: Reads values from DATA statements.
------------------------------------------------------------
     SYNTAX: REM ...
DESCRIPTION: Remark.
------------------------------------------------------------
     SYNTAX: RENUM
DESCRIPTION: Implementation defined.
------------------------------------------------------------
     SYNTAX: RESTORE [line]
DESCRIPTION: Resets the line used for the next READ
             statement.  line may be either a number or a
             label.
------------------------------------------------------------
     SYNTAX: RESUME
DESCRIPTION: Used in an error handler to specify the next
             line to execute.  Branch to ERL.
------------------------------------------------------------
     SYNTAX: RESUME line
DESCRIPTION: Used in an error handler to specify the next
             line to execute.  Branch to the specified
             line.
------------------------------------------------------------
     SYNTAX: RESUME NEXT
DESCRIPTION: Used in an error handler to specify the next
             line to execute.  Branch to the line after
             ERL.
------------------------------------------------------------
     SYNTAX: RESUME 0
DESCRIPTION: Used in an error handler to specify the next
             line to execute.  Branch to ERL.
------------------------------------------------------------
     SYNTAX: RETURN
DESCRIPTION: Concludes a subroutine called by GOSUB.
------------------------------------------------------------
     SYNTAX: RSET variable$ = value
DESCRIPTION: Right-aligns the value into variable$.  If the
             length of the value is too short, then it is
             padded on the left with spaces.  If the
             length of the value is too long, then it is
             truncated on the right.  This is only for use
             with variables assigned to a random access
             buffer with FIELD command.
------------------------------------------------------------
     SYNTAX: RUN filename$
DESCRIPTION: Loads a new BAASIC program and executes the
             program from the start.
------------------------------------------------------------
     SYNTAX: RUN line
DESCRIPTION: Executes the program in memory beginning at
             line.
------------------------------------------------------------
     SYNTAX: RUN
DESCRIPTION: Executes the program in memory from the start.
------------------------------------------------------------
     SYNTAX: SAVE [filename$]
DESCRIPTION: Saves the current program into the file
             filename$ in ASCII format.
------------------------------------------------------------
     SYNTAX: STEP
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: STOP
DESCRIPTION: Interrupts program execution and displays the
             line number of the STOP command.  For use
             when debugging BASIC programs.  Whether STOP
             issues a SIGINT signal is implementation
             defined.
------------------------------------------------------------
     SYNTAX: SWAP variable, variable
DESCRIPTION: Swaps the values of two variables. Both
             variables must be of the same type.
------------------------------------------------------------
     SYNTAX: SYSTEM
DESCRIPTION: Exits to the operating system.
------------------------------------------------------------
     SYNTAX: THEN
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: TO
DESCRIPTION: Syntax Error.
------------------------------------------------------------
     SYNTAX: WEND
DESCRIPTION: Bottom of a WHILE - WEND structure.
------------------------------------------------------------
     SYNTAX: WHILE value
DESCRIPTION: Top of a WHILE - WEND structure.  If the value
             is non-zero, then the loop is terminated.
------------------------------------------------------------
     SYNTAX: WRITE # filenum, value [, .... ]
DESCRIPTION: Outputs value to a file.    Strings are quoted
             and each value is seperated by a omma.
------------------------------------------------------------
     SYNTAX: WRITE value [, .... ]
DESCRIPTION: Outputs value to the screen.  Strings are
             quoted and each value is seperated by a
             comma.
------------------------------------------------------------


============================================================
                    FUNCTIONS                               
============================================================


------------------------------------------------------------
     SYNTAX: N  = ABS( X )
  PARAMETER: X  is a number
DESCRIPTION: The absolute value of X.
------------------------------------------------------------
     SYNTAX: N  = ASC( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: The numeric code for the first letter in A$. 
             For example, ASC("ABC") returns 65 on ASCII
             systems.
------------------------------------------------------------
     SYNTAX: N  = ATN( X )
  PARAMETER: X  is a number
DESCRIPTION: The arctangent of X in radians, i.e. the angle
             whose tangent is X, where -PI/2 < ATN(X) <
             PI/2.
------------------------------------------------------------
     SYNTAX: N  = CDBL( X )
  PARAMETER: X  is a number, [MINDBL,MAXDBL]
DESCRIPTION: The double-precision value of X.
------------------------------------------------------------
     SYNTAX: N  = CHDIR( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: Changes to the directory named to A$.
------------------------------------------------------------
     SYNTAX: S$ = CHR$( X )
  PARAMETER: X  is a number, [0,255]
DESCRIPTION: The one-character string with the character
             corresponding to the numeric code X.  On
             ASCII systems, CHR$(65) returns "A".
------------------------------------------------------------
     SYNTAX: N  = CINT( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The short (16-bit) integer value of X.
------------------------------------------------------------
     SYNTAX: N  = CLNG( X )
  PARAMETER: X  is a number, [MINLNG,MAXLNG]
DESCRIPTION: The long (32-bit) integer value of X.
------------------------------------------------------------
     SYNTAX: N  = CLOSE
DESCRIPTION: Close all open files.
------------------------------------------------------------
     SYNTAX: N  = CLOSE( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: Close file number X.
------------------------------------------------------------
     SYNTAX: N  = CLS
DESCRIPTION: Clears the screen. Cursor is positioned at row
             1, column 1.
------------------------------------------------------------
     SYNTAX: N  = COLOR( X, Y )
  PARAMETER: X  is a number, [0,255]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: Sets the foreground text color to X, and the
             background text color to Y.
------------------------------------------------------------
     SYNTAX: N  = COS( X )
  PARAMETER: X  is a number
DESCRIPTION: The cosine of X, where X is in radians.
------------------------------------------------------------
     SYNTAX: N  = CSNG( X )
  PARAMETER: X  is a number, [MINFLT,MAXFLT]
DESCRIPTION: The single-precision value of X.
------------------------------------------------------------
     SYNTAX: N  = CVD( A$ )
  PARAMETER: A$ is a string, LEN >= sizeof(DBL)
DESCRIPTION: The double-precision value in A$, which was
             created by MKD$.
------------------------------------------------------------
     SYNTAX: N  = CVI( A$ )
  PARAMETER: A$ is a string, LEN >= sizeof(INT)
DESCRIPTION: The short (16-bit) integer value in A$, which
             was created by MKI$.
------------------------------------------------------------
     SYNTAX: N  = CVL( A$ )
  PARAMETER: A$ is a string, LEN >= sizeof(LNG)
DESCRIPTION: The long (32-bit) integer value in A$, which
             was created by MKL$.
------------------------------------------------------------
     SYNTAX: N  = CVS( A$ )
  PARAMETER: A$ is a string, LEN >= sizeof(FLT)
DESCRIPTION: The single-precision value in A$, which was
             created by MKS$.
------------------------------------------------------------
     SYNTAX: S$ = DATE$
DESCRIPTION: The current date based on the internal clock
             as a string in the format set by OPTION DATE.
------------------------------------------------------------
     SYNTAX: N  = ENVIRON( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: Sends the environment variable expression
             contained in A$ to the host operating system.
             A$ must contain the  "=" character.
------------------------------------------------------------
     SYNTAX: S$ = ENVIRON$( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: The value of the environment variable named
             A$.
------------------------------------------------------------
     SYNTAX: N  = EOF( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: If device number X is at the end-of-file, then
             -1, otherwise 0.
------------------------------------------------------------
     SYNTAX: N  = ERL
DESCRIPTION: The line number of the most recent error.
------------------------------------------------------------
     SYNTAX: N  = ERR
DESCRIPTION: The error number of the most recent error.
------------------------------------------------------------
     SYNTAX: S$ = ERR$
DESCRIPTION: The last error message.
------------------------------------------------------------
     SYNTAX: N  = ERROR( X )
  PARAMETER: X  is a number, [0,255]
DESCRIPTION: Simulate the error number in X.
------------------------------------------------------------
     SYNTAX: S$ = ERROR$
DESCRIPTION: The last error message.
------------------------------------------------------------
     SYNTAX: N  = EXP( X )
  PARAMETER: X  is a number
DESCRIPTION: The exponential value of X, i.e., the value of
             the base of natural logarithms (e = 2.71828)
             raised to the power of X;  if EXP(X) is less
             that machine infinitesimal, then its value
             shall be replaced with zero.
------------------------------------------------------------
     SYNTAX: N  = FILEATTR( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [MININT,MAXINT]
DESCRIPTION: For file X, if Y = 1 then returns open mode,
             otherwise returns zero.
------------------------------------------------------------
     SYNTAX: N  = FILES
DESCRIPTION: Displays all the file names.
------------------------------------------------------------
     SYNTAX: N  = FILES( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: Displays all the file names matching A$.
------------------------------------------------------------
     SYNTAX: N  = FIX( X )
  PARAMETER: X  is a number
DESCRIPTION: The truncated integer, part of X. FIX (X) is
             equivalent to SGN(X)*INT(ABS(X)). The major
             difference between FIX and INT is that FIX
             does not return the next lower number for
             negative X.
------------------------------------------------------------
     SYNTAX: N  = FRE
DESCRIPTION: The number of bytes of available memory.  This
             function is provided for backward
             compatibility only and it always returns a
             fixed value of 32000.
------------------------------------------------------------
     SYNTAX: N  = FRE( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The number of bytes of available memory.  This
             function is provided for backward
             compatibility only and it always returns a
             fixed value of 32000.The value of A$ is
             ignored.
------------------------------------------------------------
     SYNTAX: N  = FRE( X )
  PARAMETER: X  is a number
DESCRIPTION: The number of bytes of available memory.  This
             function is provided for backward
             compatibility only and it always returns a
             fixed value of 32000.  The value of X is
             ignored.
------------------------------------------------------------
     SYNTAX: N  = GET( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: For file X, gets the next available record.
------------------------------------------------------------
     SYNTAX: N  = GET( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [MININT,MAXINT]
DESCRIPTION: For file X, gets record number Y.  The first
             record number is 1.
------------------------------------------------------------
     SYNTAX: S$ = HEX$( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The the hexadecimal (base 16) representation
             of X.
------------------------------------------------------------
     SYNTAX: S$ = INKEY$
DESCRIPTION: The keypress, if available. If a keypress is
             not available, then immediately returns an
             empty string.  If not supported by the
             platform, then always returns an empty
             string, so use INPUT$(1) instead.
------------------------------------------------------------
     SYNTAX: N  = INP( X )
  PARAMETER: X  is a number, [0,255]
DESCRIPTION: The value read from machine port X.  Causes
             ERROR 73.
------------------------------------------------------------
     SYNTAX: S$ = INPUT$( X )
  PARAMETER: X  is a number, [0,MAXLEN]
DESCRIPTION: The string of X characters, read from the
             terminal.
------------------------------------------------------------
     SYNTAX: S$ = INPUT$( X, Y )
  PARAMETER: X  is a number, [0,MAXLEN]
  PARAMETER: Y  is a number, [MININT,MAXINT]
DESCRIPTION: The string of X characters, read from file Y.
------------------------------------------------------------
     SYNTAX: N  = INSTR( A$, B$ )
  PARAMETER: A$ is a string, LEN >= 0
  PARAMETER: B$ is a string, LEN >= 0
DESCRIPTION: The position at which B$ occurs in A$,
             beginning at position 1.
------------------------------------------------------------
     SYNTAX: N  = INSTR( X, A$, B$ )
  PARAMETER: X  is a number, [1,MAXLEN]
  PARAMETER: A$ is a string, LEN >= 0
  PARAMETER: B$ is a string, LEN >= 0
DESCRIPTION: The position at which B$ occurs in A$,
             beginning at position X.
------------------------------------------------------------
     SYNTAX: N  = INT( X )
  PARAMETER: X  is a number
DESCRIPTION: The largest integer not greater than X; e.g.
             INT(1.3) = 1 and INT(-1.3) = 2.
------------------------------------------------------------
     SYNTAX: N  = KILL( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: Removes the file named in A$.
------------------------------------------------------------
     SYNTAX: S$ = LCASE$( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The string of characters from the value
             associatedwith A$ by replacing each
             upper-case-letter in the string by its
             lower-case version.
------------------------------------------------------------
     SYNTAX: S$ = LEFT$( A$, X )
  PARAMETER: A$ is a string, LEN >= 0
  PARAMETER: X  is a number, [0,MAXLEN]
DESCRIPTION: The X left-most characters of A$, beginning
             from postion 1.
------------------------------------------------------------
     SYNTAX: N  = LEN( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The length of A$.
------------------------------------------------------------
     SYNTAX: N  = LOC( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The location of file X; the next record that
             GET or PUT statements will use.
------------------------------------------------------------
     SYNTAX: N  = LOCATE( X, Y )
  PARAMETER: X  is a number, [0,255]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: Locates the cursor to row X, column Y.
------------------------------------------------------------
     SYNTAX: N  = LOF( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The length of file X.
------------------------------------------------------------
     SYNTAX: N  = LOG( X )
  PARAMETER: X  is a number, >  0
DESCRIPTION: The natural logarithm of X; X shall be greater
             than zero.
------------------------------------------------------------
     SYNTAX: N  = LPOS
DESCRIPTION: The current cursor position in the line for
             the printer.
------------------------------------------------------------
     SYNTAX: S$ = LTRIM$( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The string of characters resulting from the
             value associated with A$ by deleting all
             leading space characters.
------------------------------------------------------------
     SYNTAX: N  = LWIDTH( X )
  PARAMETER: X  is a number, [0,255]
DESCRIPTION: For printer, sets the line width to X. Zero
             means no wrapping will occur.
------------------------------------------------------------
     SYNTAX: S$ = MID$( A$, X )
  PARAMETER: A$ is a string, LEN >= 0
  PARAMETER: X  is a number, [1,MAXLEN]
DESCRIPTION: The characters of A$, starting from postion X.
------------------------------------------------------------
     SYNTAX: S$ = MID$( A$, X, Y )
  PARAMETER: A$ is a string, LEN >= 0
  PARAMETER: X  is a number, [1,MAXLEN]
  PARAMETER: Y  is a number, [0,MAXLEN]
DESCRIPTION: The Y characters of A$, starting from postion
             X.
------------------------------------------------------------
     SYNTAX: S$ = MKD$( X )
  PARAMETER: X  is a number, [MINDBL,MAXDBL]
DESCRIPTION: The internal representation of X as a string.
------------------------------------------------------------
     SYNTAX: N  = MKDIR( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: Makes the directory named in A$.
------------------------------------------------------------
     SYNTAX: S$ = MKI$( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The internal representation of the short
             (16-bit) integer X as a string.
------------------------------------------------------------
     SYNTAX: S$ = MKL$( X )
  PARAMETER: X  is a number, [MINLNG,MAXLNG]
DESCRIPTION: The internal representation of the long
             (32-bit) integer X as a string.
------------------------------------------------------------
     SYNTAX: S$ = MKS$( X )
  PARAMETER: X  is a number, [MINFLT,MAXFLT]
DESCRIPTION: The internal representation of X as a string.
------------------------------------------------------------
     SYNTAX: N  = NAME( A$, B$ )
  PARAMETER: A$ is a string, LEN >= 1
  PARAMETER: B$ is a string, LEN >= 1
DESCRIPTION: Rename the file named A$ into B$.
------------------------------------------------------------
     SYNTAX: N  = NULL( X )
  PARAMETER: X  is a number, [0,255]
DESCRIPTION: Appends X null characters after each line
             printed by LPRINT or LLIST.
------------------------------------------------------------
     SYNTAX: S$ = NUM$( X )
  PARAMETER: X  is a number
DESCRIPTION: The string generated by the print-statement as
             the numeric-representation of the value
             associated with X.
------------------------------------------------------------
     SYNTAX: S$ = OCT$( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The the octal (base 8) representation of X.
------------------------------------------------------------
     SYNTAX: N  = OPEN( A$, X, B$ )
  PARAMETER: A$ is a string, LEN >= 1
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: B$ is a string, LEN >= 1
DESCRIPTION: Open file number X.  A$ is the mode: "I", "O",
             "A", "R".  B$ is the file name.  Default the
             record length.
------------------------------------------------------------
     SYNTAX: N  = OPEN( A$, X, B$, Y )
  PARAMETER: A$ is a string, LEN >= 1
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: B$ is a string, LEN >= 1
  PARAMETER: Y  is a number, [MININT,MAXINT]
DESCRIPTION: Open file number X.  A$ is the mode: "I", "O",
             "A", "R".  B$ is the file name.  Y is the
             record length.
------------------------------------------------------------
     SYNTAX: N  = OUT( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: Sends Y to hardware port X.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = PEEK( X )
  PARAMETER: X  is a number, [MINLNG,MAXLNG]
DESCRIPTION: The value read from hardware address X. 
             Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = POKE( X, Y )
  PARAMETER: X  is a number, [MINLNG,MAXLNG]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: Sends Y to hardware address X.  Causes ERROR
             73.
------------------------------------------------------------
     SYNTAX: N  = POS
DESCRIPTION: The current cursor position in the line.
------------------------------------------------------------
     SYNTAX: N  = POS( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The current cursor position in the line for
             file X.
------------------------------------------------------------
     SYNTAX: N  = PUT( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: For file X, puts the next available record.
------------------------------------------------------------
     SYNTAX: N  = PUT( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [MININT,MAXINT]
DESCRIPTION: For file X, puts record number Y.  The first
             record number is 1.
------------------------------------------------------------
     SYNTAX: N  = RANDOMIZE
DESCRIPTION: Seeds the pseudo-random number generator with
             TIME.
------------------------------------------------------------
     SYNTAX: N  = RANDOMIZE( X )
  PARAMETER: X  is a number
DESCRIPTION: Seeds the pseudo-random number generator with
             X.
------------------------------------------------------------
     SYNTAX: S$ = REPEAT$( X, A$ )
  PARAMETER: X  is a number, [0,MAXLEN]
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: The string consisting of X copies of
             LEFT$(A$,1); X > 0.
------------------------------------------------------------
     SYNTAX: S$ = REPEAT$( X, Y )
  PARAMETER: X  is a number, [0,MAXLEN]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: The string consisting of X copies of CHR$(Y);
             X > 0.
------------------------------------------------------------
     SYNTAX: N  = RESET
DESCRIPTION: Close all open files.
------------------------------------------------------------
     SYNTAX: S$ = RIGHT$( A$, X )
  PARAMETER: A$ is a string, LEN >= 0
  PARAMETER: X  is a number, [0,MAXLEN]
DESCRIPTION: The right-most X characters of A$.
------------------------------------------------------------
     SYNTAX: N  = RMDIR( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: Removes the directory named in A$.
------------------------------------------------------------
     SYNTAX: N  = RND
DESCRIPTION: The next pseudo-random number in an
             implementation-defined sequence of
             pseudo-random numbers uniformly distributed
             in the range 0 <= RND < 1.
------------------------------------------------------------
     SYNTAX: N  = RND( X )
  PARAMETER: X  is a number
DESCRIPTION: Returns a pseudorandom number in the range
             [0,1].  The value of X is ignored.
------------------------------------------------------------
     SYNTAX: S$ = RTRIM$( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The string of characters resulting from the
             value associated with A$ by deleting all
             trailing space characters.
------------------------------------------------------------
     SYNTAX: N  = SEEK( X )
  PARAMETER: X  is a number, [MININT,MAXINT]
DESCRIPTION: The location of file X; the next record that
             GET or PUT statements will use.
------------------------------------------------------------
     SYNTAX: N  = SEEK( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [MININT,MAXINT]
DESCRIPTION: For file X, move to record number Y; the first
             record number is 1.
------------------------------------------------------------
     SYNTAX: N  = SGN( X )
  PARAMETER: X  is a number
DESCRIPTION: The sign of X: -1 if X < 0, 0 if X = 0, and +1
             if X > 0.
------------------------------------------------------------
     SYNTAX: N  = SHELL( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: The exit code resulting from the execution of
             an operating system command.
------------------------------------------------------------
     SYNTAX: N  = SIN( X )
  PARAMETER: X  is a number
DESCRIPTION: The sine of X, where X is in radians.
------------------------------------------------------------
     SYNTAX: S$ = SPACE$( X )
  PARAMETER: X  is a number, [0,MAXLEN]
DESCRIPTION: The string of X blank spaces.
------------------------------------------------------------
     SYNTAX: S$ = SPC( X )
  PARAMETER: X  is a number
DESCRIPTION: The string of X spaces.  Only for use within
             the PRINT command.
------------------------------------------------------------
     SYNTAX: N  = SQR( X )
  PARAMETER: X  is a number, >= 0
DESCRIPTION: The non-negative square root of X;  X shall be
             non-negative.
------------------------------------------------------------
     SYNTAX: S$ = STR$( X )
  PARAMETER: X  is a number
DESCRIPTION: The string generated by the print-statement as
             the numeric-representation of the value
             associated with X.
------------------------------------------------------------
     SYNTAX: S$ = STRING$( X, A$ )
  PARAMETER: X  is a number, [0,MAXLEN]
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: The string X bytes long consisting of the
             first character of A$.
------------------------------------------------------------
     SYNTAX: S$ = STRING$( X, Y )
  PARAMETER: X  is a number, [0,MAXLEN]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: The string X bytes long consisting of CHR$(Y).
------------------------------------------------------------
     SYNTAX: S$ = TAB( X )
  PARAMETER: X  is a number
DESCRIPTION: The string required to advance to column X. 
             Only for use within the PRINT command.
------------------------------------------------------------
     SYNTAX: N  = TAN( X )
  PARAMETER: X  is a number
DESCRIPTION: The tangent of X, where X is in radians.
------------------------------------------------------------
     SYNTAX: S$ = TIME$
DESCRIPTION: The time of day in 24-hour notation according
             to ISO 3307.  For example, the value of TIME$
             at 11:15 AM is "11:15:00".  If there is no
             clock available, then the value of TIME$
             shall be "99:99:99".  The value of TIME$ at
             midnight is "00:00:00".
------------------------------------------------------------
     SYNTAX: N  = TIMER
DESCRIPTION: The time in the system clock in seconds
             elapsed since midnight.
------------------------------------------------------------
     SYNTAX: S$ = TRIM$( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The string resulting from removing both
             leading and trailing spaces from A$.
------------------------------------------------------------
     SYNTAX: N  = TROFF
DESCRIPTION: Turn tracing OFF
------------------------------------------------------------
     SYNTAX: N  = TRON
DESCRIPTION: Turn tracing ON
------------------------------------------------------------
     SYNTAX: S$ = UCASE$( A$ )
  PARAMETER: A$ is a string, LEN >= 0
DESCRIPTION: The string of characters resulting from the
             value associated with A$ by replacing each
             lower-case-letter in the string by its
             upper-case version.
------------------------------------------------------------
     SYNTAX: N  = USR( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR0( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR1( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR2( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR3( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR4( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR5( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR6( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR7( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR8( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = USR9( ... )
DESCRIPTION: Execute hardware program.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = VAL( A$ )
  PARAMETER: A$ is a string, LEN >= 1
DESCRIPTION: The value of the numeric-constant associated
             with A$, if the string associated with A$ is
             a numeric-constant.  Leading and trailing
             spaces in the string are ignored.  If the
             evaluation of the numeric-constant would
             result in a value which causes an underflow,
             then the value returned shall be zero.  For
             example, VAL( " 123.5 " ) = 123.5, VAL(
             "2.E-99" ) could be zero, and VAL( "MCMXVII"
             ) causes an exception.
------------------------------------------------------------
     SYNTAX: N  = WAIT( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: Waits for the value of (INP(X) AND Y) to
             become nonzero.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = WAIT( X, Y, Z )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [0,255]
  PARAMETER: Z  is a number, [0,255]
DESCRIPTION: Waits for the value of ((INP(X) XOR Z) AND Y)
             to become nonzero.  Causes ERROR 73.
------------------------------------------------------------
     SYNTAX: N  = WIDTH( X )
  PARAMETER: X  is a number, [0,255]
DESCRIPTION: For console, sets the line width to X. Zero
             means no wrapping will occur.
------------------------------------------------------------
     SYNTAX: N  = WIDTH( X, Y )
  PARAMETER: X  is a number, [MININT,MAXINT]
  PARAMETER: Y  is a number, [0,255]
DESCRIPTION: If X = 0, sets the console width to Y.
             If X < 0, sets the printer width to Y.
             If X is an open file number, sets the file
             line width to Y.
             Otherwise sets the console rows to X and the
             line width to Y.
             A value of zero for Y means no wrapping will
             occur.
------------------------------------------------------------


============================================================
                    OPERATORS                               
============================================================


------------------------------------------------------------
     SYNTAX: X [ Y
DESCRIPTION: Exponential
 PRECEDENCE: 14
------------------------------------------------------------
     SYNTAX: # X
DESCRIPTION: Posation
 PRECEDENCE: 13
------------------------------------------------------------
     SYNTAX: + X
DESCRIPTION: Posation
 PRECEDENCE: 13
------------------------------------------------------------
     SYNTAX: - X
DESCRIPTION: Negation
 PRECEDENCE: 13
------------------------------------------------------------
     SYNTAX: X * Y
DESCRIPTION: Multiplication
 PRECEDENCE: 12
------------------------------------------------------------
     SYNTAX: X / Y
DESCRIPTION: Division
 PRECEDENCE: 12
------------------------------------------------------------
     SYNTAX: X \ Y
DESCRIPTION: Integer Division
 PRECEDENCE: 11
------------------------------------------------------------
     SYNTAX: X MOD Y
DESCRIPTION: Integer Modulus
 PRECEDENCE: 10
------------------------------------------------------------
     SYNTAX: X + Y
DESCRIPTION: Addition
 PRECEDENCE: 9
------------------------------------------------------------
     SYNTAX: X - Y
DESCRIPTION: Subtraction
 PRECEDENCE: 9
------------------------------------------------------------
     SYNTAX: X < Y
DESCRIPTION: Less than
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X <= Y
DESCRIPTION: Less than or Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X <> Y
DESCRIPTION: Not Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X = Y
DESCRIPTION: Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X =< Y
DESCRIPTION: Less than or Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X => Y
DESCRIPTION: Greater than or Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X > Y
DESCRIPTION: Greater than
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X >< Y
DESCRIPTION: Not Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: X >= Y
DESCRIPTION: Greater than or Equal
 PRECEDENCE: 7
------------------------------------------------------------
     SYNTAX: NOT X
DESCRIPTION: Bitwise NOT
 PRECEDENCE: 6
------------------------------------------------------------
     SYNTAX: X AND Y
DESCRIPTION: Bitwise AND
 PRECEDENCE: 5
------------------------------------------------------------
     SYNTAX: X OR Y
DESCRIPTION: Bitwise OR
 PRECEDENCE: 4
------------------------------------------------------------
     SYNTAX: X XOR Y
DESCRIPTION: Bitwise Exclusive OR
 PRECEDENCE: 3
------------------------------------------------------------
     SYNTAX: X EQV Y
DESCRIPTION: Bitwise EQV
 PRECEDENCE: 2
------------------------------------------------------------
     SYNTAX: X IMP Y
DESCRIPTION: Bitwise IMP
 PRECEDENCE: 1
------------------------------------------------------------


